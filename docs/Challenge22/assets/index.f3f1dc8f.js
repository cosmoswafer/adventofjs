var y=Object.defineProperty;var k=(a,e,t)=>e in a?y(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var n=(a,e,t)=>(k(a,typeof e!="symbol"?e+"":e,t),t),E=(a,e,t)=>{if(!e.has(a))throw TypeError("Cannot "+t)};var c=(a,e,t)=>{if(e.has(a))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(a):e.set(a,t)};var d=(a,e,t)=>(E(a,e,"access private method"),t);import{DOM as h}from"https://jimmy09140456.github.io/lazydom/dom.js";const C=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const m of i.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&o(m)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerpolicy&&(i.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?i.credentials="include":r.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}};C();var p,g,s,v,l,b,f,x,u,w;class S{constructor(){c(this,p);c(this,s);c(this,l);c(this,f);c(this,u);n(this,"cardCover",new h("#app .credit-card-cover"));n(this,"cardNumberInput",document.querySelector("#card-number"));n(this,"cardHolderInput",document.querySelector("#card-holder"));n(this,"cardExpirationMonthSelect",new h("#expiration-month"));n(this,"cardExpirationYearSelect",new h("#expiration-year"));n(this,"cvvInput",document.querySelector("#card-cvv"));d(this,p,g).call(this),d(this,s,v).call(this),d(this,l,b).call(this)}changeCard(e){this.setCardNumber(e)}setCardNumber(e){const o=Math.floor(Number(e)).toString();if(o.length===16){const r=`${o.slice(0,4)} ${o.slice(4,8)} ${o.slice(8,12)} ${o.slice(12,16)}`;this.cardCover.dot([".front .card-number .emboss",r],[".front .card-number .shadow",r])}else console.log("Fuck 8!")}setCardExpiration(){const e=this.cardExpirationMonthSelect.element.value,t=this.cardExpirationYearSelect.element.value;if(e!=""&&t!=""){console.log(`${e}/${t}`);const o=`${e}/${t}`;this.cardCover.dot([".front .expiration-date .emboss",o],[".front .expiration-date .shadow",o])}else console.log("Fuck not date")}}p=new WeakSet,g=function(){this.cardNumberInput.addEventListener("change",e=>this.changeCard(e.target.value)),this.cardHolderInput.addEventListener("change",e=>this.cardCover.dot([".front .holder .shadow",e.target.value],[".front .holder .emboss",e.target.value],[".back .signature",e.target.value])),this.cardExpirationMonthSelect.element.addEventListener("change",()=>this.setCardExpiration()),this.cardExpirationYearSelect.element.addEventListener("change",()=>this.setCardExpiration()),this.cvvInput.addEventListener("input",e=>this.cardCover.dot([".back .cvv",e.target.value]))},s=new WeakSet,v=function(){this.cvvInput.addEventListener("focusin",()=>this.cardCover.classList.add("flip")),this.cvvInput.addEventListener("focusout",()=>this.cardCover.classList.remove("flip"))},l=new WeakSet,b=function(){d(this,f,x).call(this),d(this,u,w).call(this,new Date().getFullYear())},f=new WeakSet,x=function(){const e=this.cardExpirationMonthSelect.DOM();e.element.value="",e.element.textContent="Month";for(let t=1;t<=12;t++){const o=this.cardExpirationMonthSelect.DOM();o.element.value=t.toString().padStart(2,"0"),o.element.textContent=t.toString().padStart(2,"0")}},u=new WeakSet,w=function(e){const t=this.cardExpirationYearSelect.DOM();t.element.value="",t.element.textContent="Year";for(let o=e;o<e+10;o++){const r=this.cardExpirationYearSelect.DOM();r.element.value=o,r.element.textContent=o}};new S;
