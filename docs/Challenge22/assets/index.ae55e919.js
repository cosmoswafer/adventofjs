var y=Object.defineProperty;var k=(o,e,r)=>e in o?y(o,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[e]=r;var i=(o,e,r)=>(k(o,typeof e!="symbol"?e+"":e,r),r),C=(o,e,r)=>{if(!e.has(o))throw TypeError("Cannot "+r)};var n=(o,e,r)=>{if(e.has(o))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(o):e.set(o,r)};var d=(o,e,r)=>(C(o,e,"access private method"),r);import{DOM as h}from"https://jimmy09140456.github.io/lazydom/dom.js";const E=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const c of t)if(c.type==="childList")for(const m of c.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&a(m)}).observe(document,{childList:!0,subtree:!0});function r(t){const c={};return t.integrity&&(c.integrity=t.integrity),t.referrerpolicy&&(c.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?c.credentials="include":t.crossorigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function a(t){if(t.ep)return;t.ep=!0;const c=r(t);fetch(t.href,c)}};E();var s,v,p,g,l,b,f,x,u,w;class S{constructor(){n(this,s);n(this,p);n(this,l);n(this,f);n(this,u);i(this,"cardCover",new h("#app .credit-card-cover"));i(this,"cardNumberInput",document.querySelector("#card-number"));i(this,"cardHolderInput",document.querySelector("#card-holder"));i(this,"cardExpirationMonthSelect",new h("#expiration-month"));i(this,"cardExpirationYearSelect",new h("#expiration-year"));i(this,"cvvInput",document.querySelector("#card-cvv"));d(this,s,v).call(this),d(this,p,g).call(this),d(this,l,b).call(this)}changeCard(e){this.changeCardCover(e),this.setCardNumber(e)}changeCardCover(e){const r=e.slice(0,1);this.cardCover.classList.value="credit-card-cover",r==="3"?this.cardCover.classList.add("american"):r==="4"?this.cardCover.classList.add("visa"):r==="5"?this.cardCover.classList.add("mastercard"):r==="6"&&this.cardCover.classList.add("discover")}setCardNumber(e){const a=Math.floor(Number(e)).toString();if(a.length===16){const t=`${a.slice(0,4)} ${a.slice(4,8)} ${a.slice(8,12)} ${a.slice(12,16)}`;this.cardCover.dot([".front .card-number .emboss",t],[".front .card-number .shadow",t])}}setCardExpiration(){const e=this.cardExpirationMonthSelect.element.value,r=this.cardExpirationYearSelect.element.value;if(e!=""&&r!=""){console.log(`${e}/${r}`);const a=`${e}/${r}`;this.cardCover.dot([".front .expiration-date .emboss",a],[".front .expiration-date .shadow",a])}else console.log("Fuck not date")}}s=new WeakSet,v=function(){this.cardNumberInput.addEventListener("change",e=>this.changeCard(e.target.value)),this.cardHolderInput.addEventListener("change",e=>this.cardCover.dot([".front .holder .shadow",e.target.value],[".front .holder .emboss",e.target.value],[".back .signature",e.target.value])),this.cardExpirationMonthSelect.element.addEventListener("change",()=>this.setCardExpiration()),this.cardExpirationYearSelect.element.addEventListener("change",()=>this.setCardExpiration()),this.cvvInput.addEventListener("input",e=>this.cardCover.dot([".back .cvv",e.target.value]))},p=new WeakSet,g=function(){this.cvvInput.addEventListener("focusin",()=>this.cardCover.classList.add("flip")),this.cvvInput.addEventListener("focusout",()=>this.cardCover.classList.remove("flip"))},l=new WeakSet,b=function(){d(this,f,x).call(this),d(this,u,w).call(this,new Date().getFullYear())},f=new WeakSet,x=function(){const e=this.cardExpirationMonthSelect.DOM();e.element.value="",e.element.textContent="Month";for(let r=1;r<=12;r++){const a=this.cardExpirationMonthSelect.DOM();a.element.value=r.toString().padStart(2,"0"),a.element.textContent=r.toString().padStart(2,"0")}},u=new WeakSet,w=function(e){const r=this.cardExpirationYearSelect.DOM();r.element.value="",r.element.textContent="Year";for(let a=e;a<e+10;a++){const t=this.cardExpirationYearSelect.DOM();t.element.value=a,t.element.textContent=a}};new S;
